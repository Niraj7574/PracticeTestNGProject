<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="4" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-06T05:33:22Z" name="Suite" finished-at="2023-01-06T05:33:22Z" duration-ms="22">
    <groups>
      <group name="smoke">
        <method signature="Testing3.createUser()[pri:1, instance:selenium.Testing3@5f282abb]" name="createUser" class="selenium.Testing3"/>
        <method signature="Testing2.test2()[pri:1, instance:selenium.Testing2@1d29cf23]" name="test2" class="selenium.Testing2"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-01-06T05:33:22Z" name="Test" finished-at="2023-01-06T05:33:22Z" duration-ms="22">
      <class name="selenium.Testing2">
        <test-method signature="test2()[pri:1, instance:selenium.Testing2@1d29cf23]" started-at="2023-01-06T05:33:22Z" name="test2" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test1()[pri:2, instance:selenium.Testing2@1d29cf23]" started-at="2023-01-06T05:33:22Z" name="test1" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- selenium.Testing2 -->
      <class name="selenium.Testing3">
        <test-method signature="createUser()[pri:1, instance:selenium.Testing3@5f282abb]" started-at="2023-01-06T05:33:22Z" name="createUser" finished-at="2023-01-06T05:33:22Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at selenium.Testing3.createUser(Testing3.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="modifyUser()[pri:2, instance:selenium.Testing3@5f282abb]" started-at="2023-01-06T05:33:22Z" name="modifyUser" finished-at="2023-01-06T05:33:22Z" depends-on-methods="selenium.Testing3.createUser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.modifyUser()[pri:2, instance:selenium.Testing3@5f282abb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.modifyUser()[pri:2, instance:selenium.Testing3@5f282abb] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modifyUser -->
        <test-method signature="deleteUser()[pri:3, instance:selenium.Testing3@5f282abb]" started-at="2023-01-06T05:33:22Z" name="deleteUser" finished-at="2023-01-06T05:33:22Z" depends-on-methods="selenium.Testing3.createUser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.deleteUser()[pri:3, instance:selenium.Testing3@5f282abb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.deleteUser()[pri:3, instance:selenium.Testing3@5f282abb] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- selenium.Testing3 -->
      <class name="selenium.Testing1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="beforeSuite" finished-at="2023-01-06T05:33:22Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="beforeTest" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="beforeClass" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="beforeMethod" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="f" data-provider="dp" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="afterMethod" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="beforeMethod" finished-at="2023-01-06T05:33:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="afterMethod" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="f" data-provider="dp" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="afterClass" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="afterTest" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:selenium.Testing1@27a5f880]" started-at="2023-01-06T05:33:22Z" name="afterSuite" finished-at="2023-01-06T05:33:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Testing1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
